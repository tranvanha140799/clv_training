import { Type } from '@nestjs/common';
import { ClientProxy } from '@nestjs/microservices/client';
import { Transport } from '@nestjs/microservices/enums/transport.enum';
import { Deserializer } from '@nestjs/microservices/interfaces/deserializer.interface';
import { GrpcOptions, KafkaOptions, MqttOptions, NatsOptions, RedisOptions, RmqOptions } from '@nestjs/microservices/interfaces/microservice-configuration.interface';
import { Serializer } from '@nestjs/microservices/interfaces/serializer.interface';
export declare type ClientOptions = RedisOptions | NatsOptions | MqttOptions | GrpcOptions | KafkaOptions | TcpClientOptions | RmqOptions;
export interface CustomClientOptions {
    customClass: Type<ClientProxy>;
    options?: Record<string, any>;
}
export interface TcpClientOptions {
    transport: Transport.TCP;
    options?: {
        host?: string;
        port?: number;
        serializer?: Serializer;
        deserializer?: Deserializer;
    };
}
